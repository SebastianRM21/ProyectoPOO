/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.ArchivoController;
import controlador.CursoController;
import controlador.EstudianteController;
import java.io.IOException;
import javax.swing.JOptionPane;
import modelo.Estudiante;

/**
 *
 * @author Sebastian Rosero
 */
public class CrearEstudiante extends javax.swing.JFrame {

    EstudianteController controladorEstudiante = new EstudianteController();
    CursoController controladorCurso = new CursoController();
    ArchivoController controlArchivo = new ArchivoController();
    public static Estudiante editarEstudiante;
    int seleccionar = -1;

    /**
     * Creates new form CrearEstudiante
     */
    public CrearEstudiante() {

        initComponents();
//actualiza la tabla de estudiantes
        actualizarTabla();
//se inicializan los iconnos de error
        jLabelIconError.setVisible(false);
        jLabelIconError1.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        InputApellido = new javax.swing.JTextField();
        InputId = new javax.swing.JTextField();
        InputUsuario = new javax.swing.JTextField();
        InputPass = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEstudiantes = new javax.swing.JTable();
        jLabelIconError = new javax.swing.JLabel();
        jLabelIconError1 = new javax.swing.JLabel();
        jButtonReverso = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        InputSegundoApellido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        InputSegundoNombre = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel10.setText("Deje este espacio en blanco si solo hay un nombre ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(900, 570));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(600, 600));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 67, 80, 60));

        jLabel3.setText("Identificación");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 80, 20));

        jLabel4.setText("Primer Apellido:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 167, 100, 20));

        jLabel5.setText("Contraseña:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 80, 20));

        jLabel6.setText("Usuario:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, -1, 20));

        inputNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputNombreKeyTyped(evt);
            }
        });
        jPanel1.add(inputNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 151, -1));

        InputApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputApellidoKeyTyped(evt);
            }
        });
        jPanel1.add(InputApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 151, -1));

        InputId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputIdKeyTyped(evt);
            }
        });
        jPanel1.add(InputId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 151, -1));

        InputUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(InputUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 151, -1));

        InputPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputPassKeyTyped(evt);
            }
        });
        jPanel1.add(InputPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 151, -1));

        jButton1.setBackground(new java.awt.Color(51, 255, 51));
        jButton1.setText("Crear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 107, 34));

        tablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificación", "Nombre", "Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEstudiantes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEstudiantes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 560, 580));

        jLabelIconError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pngwing.com (4).png"))); // NOI18N
        jPanel1.add(jLabelIconError, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 20, -1));

        jLabelIconError1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pngwing.com (4).png"))); // NOI18N
        jPanel1.add(jLabelIconError1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 20, 20));

        jButtonReverso.setBackground(new java.awt.Color(255, 0, 0));
        jButtonReverso.setText("Atras");
        jButtonReverso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReversoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonReverso, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 20));

        btnEditar.setBackground(new java.awt.Color(255, 153, 0));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, 100, 30));

        jLabel8.setText("Segundo Apellido:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 110, -1));

        InputSegundoApellido.setToolTipText("");
        InputSegundoApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputSegundoApellidoKeyTyped(evt);
            }
        });
        jPanel1.add(InputSegundoApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 150, -1));

        jLabel9.setText("Segundo Nombre:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 110, -1));

        InputSegundoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputSegundoNombreKeyTyped(evt);
            }
        });
        jPanel1.add(InputSegundoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 150, -1));

        jLabel12.setText("No es obligatorio llenar segundo apellido");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, 10));

        jLabel13.setText("No es obligatorio llenar segundo nombre");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, -1, 10));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/oleg-laptev-7jQh3EiS8Bs-unsplash.jpg"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Eventos que evitan digitar caraceres no validos
    private void inputNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNombreKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))
            evt.consume();
    }//GEN-LAST:event_inputNombreKeyTyped

    private void InputApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputApellidoKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))
            evt.consume();
    }//GEN-LAST:event_InputApellidoKeyTyped

    private void InputIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputIdKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9'))
            evt.consume();
    }//GEN-LAST:event_InputIdKeyTyped

    private void InputUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputUsuarioKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))
            evt.consume();
    }//GEN-LAST:event_InputUsuarioKeyTyped

    private void InputPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputPassKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != '.'))
            evt.consume();
    }//GEN-LAST:event_InputPassKeyTyped


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//validacion de campos vacios        
        boolean verificador = controladorEstudiante.camposVacios(inputNombre.getText(), InputApellido.getText(), InputId.getText(), InputUsuario.getText(), InputPass.getText());
        if (verificador) {
            JOptionPane.showMessageDialog(this, "Algunos campos estas vacios, por favor llenelos primero");
        } else {
//concatenan los nombres y apellidos
            String nombres = controladorEstudiante.concatenarVerificarDatosPersonales(inputNombre.getText(), InputSegundoNombre.getText());
            String apellidos = controladorEstudiante.concatenarVerificarDatosPersonales(InputApellido.getText(), InputSegundoApellido.getText());
//verifica los campos contraseña, identificacion y contraseña           
            if (!controladorEstudiante.verificadorIdIgualDiez(InputId.getText())) {
                JOptionPane.showMessageDialog(this, "Ingrese un identificador de 10 digitos");
                InputId.requestFocus();
                jLabelIconError.setVisible(true);
            }
            if (!controladorEstudiante.verificarTamanoContrasena(InputPass.getText().length())) {
                JOptionPane.showMessageDialog(this, "Por favor, para seguridad, inserte una contraseña con más de 7 caracteres");
                InputPass.requestFocus();
                jLabelIconError1.setVisible(true);
            }

            boolean verificadorEstudianteNombreApellidoRepetido = true;
            boolean verificadorEstudianteIdRepetido = true;
            boolean verificadorEstudianteUserRepetido = true;

            try {
//verifica que la informacion del estudiante no este creada anteriormente 
                verificadorEstudianteNombreApellidoRepetido = controladorEstudiante.verificadorEstRepetido(nombres, apellidos);
                verificadorEstudianteIdRepetido = controladorEstudiante.verificadorEstIdRepetido(InputId.getText());
                verificadorEstudianteUserRepetido = controladorEstudiante.verificadorEstUserRepetido(InputUsuario.getText());
            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Error al validar el estudiante en el archivo");
            }

            if (!verificadorEstudianteNombreApellidoRepetido && !verificadorEstudianteIdRepetido) {
                if (!verificadorEstudianteUserRepetido) {
                    if (controladorEstudiante.verificarTamanoContrasena(InputPass.getText().length()) && controladorEstudiante.verificadorIdIgualDiez(InputId.getText())) {
//si pasa todas las validaciones anterirores se crea el estudiante
                        try {
                            Estudiante estudiante = new Estudiante(nombres, apellidos, InputId.getText(), InputUsuario.getText(), InputPass.getText());
                            controladorEstudiante.guardarEstudiante(estudiante);
                            actualizarTabla();
                            JOptionPane.showMessageDialog(this, "Estudiante creado exitosamente");
                            controladorEstudiante.limpiarCamposTexto(inputNombre, InputSegundoNombre, InputApellido, InputSegundoApellido, InputId, InputUsuario, InputPass);

                            jLabelIconError.setVisible(false);
                            jLabelIconError1.setVisible(false);
                        } catch (IOException e) {
                            controladorEstudiante.limpiarCamposTexto(inputNombre, InputSegundoNombre, InputApellido, InputSegundoApellido, InputId, InputUsuario, InputPass);
                            jLabelIconError.setVisible(false);
                            jLabelIconError1.setVisible(false);
//si ocurre algun error en el archivo nos imprime este mensaje 
                            JOptionPane.showMessageDialog(rootPane, "Error al guardar al estuddiante en el archivo");
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El usario ya existe");
                }

            } else {
                if (verificadorEstudianteNombreApellidoRepetido) {
                    JOptionPane.showMessageDialog(this, "Ya hay un estudiante con los mismo nombres y apellidos");
                } else {
                    if (verificadorEstudianteIdRepetido) {
                        JOptionPane.showMessageDialog(this, "Ya hay un estudiante con la misma identificación");
                        InputId.requestFocus();
                        jLabelIconError.setVisible(true);
                    }
                }
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

//Mas metodos que evitan caracteres invalidos
    private void InputSegundoNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputSegundoNombreKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))
            evt.consume();
    }//GEN-LAST:event_InputSegundoNombreKeyTyped

    private void InputSegundoApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputSegundoApellidoKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))
            evt.consume();
    }//GEN-LAST:event_InputSegundoApellidoKeyTyped
//este metodo me guarda la fila que seleccione el usuario cuando da click a la tabla
    private void tablaEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEstudiantesMouseClicked
        seleccionar = tablaEstudiantes.rowAtPoint(evt.getPoint());
    }//GEN-LAST:event_tablaEstudiantesMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
//validamos si ha seleccionado algun estudiante        
        if (seleccionar != -1) {
            try {
//se busca al estudiante y se elimina temporalmente
                editarEstudiante = controlArchivo.buscarEstudiante(String.valueOf(tablaEstudiantes.getValueAt(seleccionar, 0)));
                controladorEstudiante.eliminarEstudiante(editarEstudiante);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Error al seleccionar al estudiante");
            }

            this.dispose();
            EditarEstudiante vistaEditar = new EditarEstudiante();
            vistaEditar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un estudiante");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jButtonReversoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReversoActionPerformed
        //cierra la ventana actual y abre la correspondiente
        MenuProfesor menuProfe= new MenuProfesor();
        menuProfe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonReversoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearEstudiante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InputApellido;
    private javax.swing.JTextField InputId;
    private javax.swing.JTextField InputPass;
    private javax.swing.JTextField InputSegundoApellido;
    private javax.swing.JTextField InputSegundoNombre;
    private javax.swing.JTextField InputUsuario;
    private javax.swing.JButton btnEditar;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonReverso;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIconError;
    private javax.swing.JLabel jLabelIconError1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEstudiantes;
    // End of variables declaration//GEN-END:variables

    private void actualizarTabla() {
        try {
            tablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
                    controladorEstudiante.CargarTabla(),
                    new String[]{
                        "Identificacion", "Nombre", "Apellido"
                    }
            ));
        } catch (IOException e) {
            System.out.println("error en la tabla");
        }
    }
}
